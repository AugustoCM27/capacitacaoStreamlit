import joblib
import streamlit as st
import pandas as pd
import numpy as np
import pydeck as pdk
import seaborn as sns
import matplotlib.pyplot as plt


# Carregando os dados e convertendo a coluna YearsCodePro para float
dataset = pd.read_csv("dataset_processado.csv")
dataset["YearsCodePro"] = dataset["YearsCodePro"].astype("float", errors="ignore")


# Fun√ß√£o geral para nossas an√°lises
def Analisar(variavel_um, variavel_dois, data=dataset):
    ''' 
        Fun√ß√£o para analisar duas vari√°veis de um dataset
        
        Por exemplo: Analisar("Country", "Salary")
        Esse comando ir√° analisar a m√©dia salarial por pa√≠s e
        retornar√°-los em ordem decrescente.
    '''

    # Agrupando os dados e calculando a mediana
    analise = data.groupby(variavel_um)[variavel_dois].median()

    # Ordenando os valores de forma decrescente (01) e resetando o √≠ndice (02)
    analise = analise.sort_values(ascending=False) # (01)
    analise = analise.reset_index() # (02)

    return analise


# Configurando a p√°gina
st.set_page_config(layout="wide", page_title="Exemplo STREAMLIT - LIGA DS")


# Inserindo imagem centralizada
logo_url = "https://i.imgur.com/FRUhSqn.png"


# Vamos criar 7 colunas e colocar a imagem no centro da coluna do meio
_,_,_,_,logo,_,_,_,_ = st.columns(9)
logo.image(logo_url)


# Vamos criar 3 colunas e colocar a imagem no centro da coluna do meio
_,menu,_ = st.columns(3)


# Definindo um t√≠tulo
menu.title("An√°lise de dados do Stack Overflow 2023 üë®‚Äçüíª")
menu.markdown("---")

# INTRODU√á√ÉO:
menu.markdown("## Introdu√ß√£o:")

# Definindo um subt√≠tulo
menu.markdown("""
            Ol√°! üëãüëãüëãüëã

            Este √© um exemplo de an√°lise de dados utilizando Streamlit. 
            Streamlit √© uma biblioteca Python de c√≥digo aberto que permite
            criar complexas visualiza√ß√µes de dados de maneira simples e
            r√°pida.
            
            Neste exemplo, vamos usar Streamlit para criar um simples
            aplicativo que nos permite visualizar e interagir com um simples
            conjunto de dados de sal√°rios de desenvolvedores. O conjunto de
            dados cont√©m informa√ß√µes sobre a √°rea de atua√ß√£o, localiza√ß√£o, 
            n√≠vel de forma√ß√£o e tempo de experi√™ncia na √°rea.
            
            Vamos usar Streamlit para criar gr√°ficos que nos permite visualizar
            os dados de maneira interativa. Tamb√©m vamos usar Streamlit para criar
            um simples aplicativo que permite que voc√™ preveja seu pr√≥prio sal√°rio. """)


# ANALISES:
menu.markdown("---")
menu.markdown("## An√°lises:")


# CASO 01. An√°lise de sal√°rio por pa√≠s
st.markdown("#### 01. Analisando o sal√°rio por pa√≠ses:")
analise_salario_pais = Analisar("Country", "Salary")

colA, colB = st.columns(2)

colA.text("  Os 10 pa√≠ses com maiores sal√°rios:  ")
colA.dataframe(analise_salario_pais.head(10), use_container_width = True)

colB.text("  Gr√°fico de barra com os sal√°rios em ordem crescente  ")
colB.bar_chart(data = analise_salario_pais, x= "Country", y="Salary", 
                use_container_width = True, height=500)

analise_coordenada = dataset.groupby(["LATITUDE", "LONGITUDE"])["Salary"].median()


valores = analise_coordenada.values
# processando coordenadas
coordenadas = analise_coordenada.index
latitude    = coordenadas.get_level_values(0)
longitude   = coordenadas.get_level_values(1)

st.map(pd.DataFrame({"lat":latitude, "lon":longitude, "salario":valores}), size="salario")



# CASO 02. An√°lise de sal√°rio por √°rea de atua√ß√£o
st.markdown("#### 02. Analisando o sal√°rio por √°rea de atua√ß√£o:")
analise_salario_area = Analisar("DevType", "Salary")

colA, colB = st.columns(2)

colA.text("  As 10 √°reas com maiores sal√°rios:  ")
colA.dataframe(analise_salario_area.head(10), use_container_width = True)

colB.text("  Gr√°fico de barra com os sal√°rios")
colB.bar_chart(data = analise_salario_area, x= "DevType", y="Salary",
                use_container_width = True, height=500)


st.markdown("-----")


# CASO 03. An√°lise de sal√°rio por √°rea de atua√ß√£o
st.markdown("#### 03. Analisando o sal√°rio por anos de atua√ß√£o:")

st.text("  Gr√°fico de linha com os anos de experi√™ncia em fun√ß√£o do sal√°rio:  ")

analise_salario_anos = Analisar("YearsCodePro", "Salary")

st.line_chart(data = analise_salario_anos, x= "YearsCodePro", y="Salary",
                use_container_width = True, height=500)
st.markdown("-----")


# PREVIS√ÉO DE SAL√ÅRIOS
st.markdown("#### Prevendo sal√°rios üí∏")

st.text("  Insira seus dados para fazer uma previs√£o de sal√°rio:  ")

_, center, _ = st.columns(3)

# Criando os widgets para inser√ß√£o de dados
center.slider("Anos de experi√™ncia", 0, 50, 25, key="anos_experiencia")
center.selectbox("√Årea de atua√ß√£o", (dataset["DevType"].unique()), key="area_atuacao")
center.selectbox("Pa√≠s", (dataset["Country"].unique()), key="pais")

if center.button("Prever sal√°rio", key="prever_salario", use_container_width=True):

    # Obtendo dados inseridos pelo usu√°rio
    anos_exp = st.session_state.anos_experiencia
    area_atuacao = st.session_state.area_atuacao
    pais = st.session_state.pais

    # Carregando Label Encoders e o modelo
    load_label_encoder_area = joblib.load("area_encoder.pkl")
    load_label_encoder_pais = joblib.load("pais_encoder.pkl")
    modelo = joblib.load("modelo.pkl")

    area_encoded = load_label_encoder_area.transform([area_atuacao])
    pais_encoded = load_label_encoder_pais.transform([pais])

    # Vetor de entrada para o modelo
    input_vector = np.array((int(pais_encoded), int(area_encoded), anos_exp))

    # Fazendo predi√ß√µes
    predict = modelo.predict([input_vector])
    
    salario_minimo = round((float(predict) - 47666), 2)
    salario_mensal_cvt = (salario_minimo / 12) * 4.90

    _, center_predict, _ = st.columns(3)

    center_predict.markdown("""
            ## Previs√µes prontas üéâüéâ
            ##### Seu sal√°rio seria aproximadamente {:.2f} reais / m√™s.""".format(salario_mensal_cvt))
    
    
st.write("----")
st.write("""OBS: Como simplificamos muito o dataset, as previs√µes n√£o s√£o muito precisas. Acima
                exibi o sal√°rio m√≠nimo, que √© o sal√°rio previsto pela IA subtra√≠do pelo erro absoluto m√©dio, que
                √© de 47666 d√≥lares.""")
    

    

